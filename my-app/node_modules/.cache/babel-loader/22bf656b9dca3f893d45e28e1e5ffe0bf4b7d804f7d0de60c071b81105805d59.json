{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = splitBoxModelStyle;\nvar _pick = _interopRequireDefault(require(\"ramda/src/pick\"));\nvar _omit = _interopRequireDefault(require(\"ramda/src/omit\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst borderBoxProps = ['backgroundColor', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomWidth', 'borderLeftColor', 'borderLeftWidth', 'borderRightColor', 'borderRightWidth', 'borderStyle', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopWidth', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop'];\nconst pickBorderBox = (0, _pick.default)(borderBoxProps);\nconst omitBorderBox = (0, _omit.default)(borderBoxProps);\n/**\n * A utility to separate box model styles and other styles. Useful when one wants\n * to wrap a text element in a view to benefit from padding vertical,\n * borders... etc.\n *\n * @param styles - The native styles to split.\n */\n\nfunction splitBoxModelStyle(style) {\n  return {\n    boxModelStyle: pickBorderBox(style),\n    otherStyle: omitBorderBox(style)\n  };\n}","map":{"version":3,"mappings":";;;;;;AAAA;AACA;;;;;;AAGA,MAAMA,cAAc,GAAG,CACrB,iBADqB,EAErB,mBAFqB,EAGrB,wBAHqB,EAIrB,yBAJqB,EAKrB,mBALqB,EAMrB,iBANqB,EAOrB,iBAPqB,EAQrB,kBARqB,EASrB,kBATqB,EAUrB,aAVqB,EAWrB,gBAXqB,EAYrB,qBAZqB,EAarB,sBAbqB,EAcrB,gBAdqB,EAerB,eAfqB,EAgBrB,aAhBqB,EAiBrB,cAjBqB,EAkBrB,YAlBqB,EAmBrB,cAnBqB,EAoBrB,YApBqB,EAqBrB,aArBqB,EAsBrB,WAtBqB,CAAvB;AAyBA,MAAMC,aAAa,GAAG,mBAAKD,cAAL,CAAtB;AACA,MAAME,aAAa,GAAG,mBAAKF,cAAL,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASG,kBAAT,CACbC,KADa,EAEb;EACA,OAAO;IACLC,aAAa,EAAEJ,aAAa,CAACG,KAAD,CADvB;IAELE,UAAU,EAAEJ,aAAa,CAACE,KAAD;EAFpB,CAAP;AAID","names":["borderBoxProps","pickBorderBox","omitBorderBox","splitBoxModelStyle","style","boxModelStyle","otherStyle"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/helpers/splitBoxModelStyle.ts"],"sourcesContent":["import pick from 'ramda/src/pick';\nimport omit from 'ramda/src/omit';\nimport { TNodeShape, TNodeType } from '@native-html/transient-render-engine';\n\nconst borderBoxProps = [\n  'backgroundColor',\n  'borderBottomColor',\n  'borderBottomLeftRadius',\n  'borderBottomRightRadius',\n  'borderBottomWidth',\n  'borderLeftColor',\n  'borderLeftWidth',\n  'borderRightColor',\n  'borderRightWidth',\n  'borderStyle',\n  'borderTopColor',\n  'borderTopLeftRadius',\n  'borderTopRightRadius',\n  'borderTopWidth',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop'\n];\n\nconst pickBorderBox = pick(borderBoxProps);\nconst omitBorderBox = omit(borderBoxProps);\n\n/**\n * A utility to separate box model styles and other styles. Useful when one wants\n * to wrap a text element in a view to benefit from padding vertical,\n * borders... etc.\n *\n * @param styles - The native styles to split.\n */\nexport default function splitBoxModelStyle(\n  style: ReturnType<TNodeShape<TNodeType>['getNativeStyles']>\n) {\n  return {\n    boxModelStyle: pickBorderBox(style),\n    otherStyle: omitBorderBox(style)\n  };\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}