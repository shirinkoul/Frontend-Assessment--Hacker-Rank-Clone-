{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = collapseTopMarginForChild;\nvar _getCollapsedMarginTop = _interopRequireDefault(require(\"./getCollapsedMarginTop\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isCollapsible(tnode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n/**\n * Compute top collapsed margin for the nth {@link TNode}-child of a list of\n * TNodes.\n *\n * @param n - The index for which the top margin should be collapsed.\n * @param tchildren - The list of {@link TNode} children.\n * @returns `null` when no margin collapsing should apply, a number otherwise.\n * @public\n */\n\nfunction collapseTopMarginForChild(n, tchildren) {\n  const childTnode = tchildren[n];\n  if (isCollapsible(childTnode) && n > 0 && isCollapsible(tchildren[n - 1])) {\n    return (0, _getCollapsedMarginTop.default)(tchildren[n - 1], childTnode);\n  }\n  return null;\n}","map":{"version":3,"mappings":";;;;;;AACA;;;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAAqC;EACnC,OAAOA,KAAK,CAACC,IAAN,KAAe,OAAf,IAA0BD,KAAK,CAACC,IAAN,KAAe,UAAhD;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,yBAAT,CACbC,CADa,EAEbC,SAFa,EAGE;EACf,MAAMC,UAAU,GAAGD,SAAS,CAACD,CAAD,CAA5B;EACA,IAAIJ,aAAa,CAACM,UAAD,CAAb,IAA6BF,CAAC,GAAG,CAAjC,IAAsCJ,aAAa,CAACK,SAAS,CAACD,CAAC,GAAG,CAAL,CAAV,CAAvD,EAA2E;IACzE,OAAO,oCAAsBC,SAAS,CAACD,CAAC,GAAG,CAAL,CAA/B,EAAwCE,UAAxC,CAAP;EACD;EACD,OAAO,IAAP;AACD","names":["isCollapsible","tnode","type","collapseTopMarginForChild","n","tchildren","childTnode"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/helpers/collapseTopMarginForChild.ts"],"sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport getCollapsedMarginTop from './getCollapsedMarginTop';\n\nfunction isCollapsible(tnode: TNode) {\n  return tnode.type === 'block' || tnode.type === 'phrasing';\n}\n\n/**\n * Compute top collapsed margin for the nth {@link TNode}-child of a list of\n * TNodes.\n *\n * @param n - The index for which the top margin should be collapsed.\n * @param tchildren - The list of {@link TNode} children.\n * @returns `null` when no margin collapsing should apply, a number otherwise.\n * @public\n */\nexport default function collapseTopMarginForChild(\n  n: number,\n  tchildren: readonly TNode[]\n): number | null {\n  const childTnode = tchildren[n];\n  if (isCollapsible(childTnode) && n > 0 && isCollapsible(tchildren[n - 1])) {\n    return getCollapsedMarginTop(tchildren[n - 1], childTnode);\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}