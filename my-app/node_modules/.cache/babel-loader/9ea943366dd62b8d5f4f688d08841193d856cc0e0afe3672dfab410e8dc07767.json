{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { Text, View } from 'react-native';\nconst markerClipConfig = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\n/**\n * Default component to render the list marker.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#marker-pseudo | CSS Lists and Counters Module Level 3, Markers}\n *\n * @public\n */\n\nexport default function MarkerBox(_ref) {\n  let {\n    style,\n    counterRenderer,\n    counterIndex,\n    markerTextStyle,\n    markerTextWidth,\n    enableMarkerClipping\n  } = _ref;\n  const markerStyle = typeof markerTextWidth === 'number' ? [markerTextStyle, {\n    width: markerTextWidth\n  }] : markerTextStyle;\n  return /*#__PURE__*/React.createElement(View, {\n    style: style\n  }, /*#__PURE__*/React.createElement(Text, _extends({}, enableMarkerClipping ? markerClipConfig : null, {\n    testID: \"marker-box\",\n    style: markerStyle\n  }), counterRenderer.renderMarker(counterIndex)));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAA0BC,IAA1B,QAAsC,cAAtC;AAGA,MAAMC,gBAAoC,GAAG;EAC3CC,aAAa,EAAE,CAD4B;EAE3CC,aAAa,EAAE;AAF4B,CAA7C;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,OAOI;EAAA,IAPe;IAChCC,KADgC;IAEhCC,eAFgC;IAGhCC,YAHgC;IAIhCC,eAJgC;IAKhCC,eALgC;IAMhCC;EANgC,CAAnB;EAQb,MAAMC,WAAW,GACf,OAAOF,eAAP,KAA2B,QAA3B,GACI,CAACD,eAAD,EAAkB;IAAEI,KAAK,EAAEH;EAAT,CAAlB,CADJ,GAEID,eAHN;EAIA,oBACEV,oBAACE,IAAD;IAAMK,KAAK,EAAEA;EAAb,gBACEP,oBAACC,IAAD,eACOW,oBAAoB,GAAGT,gBAAH,GAAsB,IADjD;IAEEY,MAAM,EAAC,YAFT;IAGER,KAAK,EAAEM;EAHT,IAIGL,eAAe,CAACQ,YAAhB,CAA6BP,YAA7B,CAJH,CADF,CADF;AAUD","names":["React","Text","View","markerClipConfig","numberOfLines","ellipsizeMode","MarkerBox","style","counterRenderer","counterIndex","markerTextStyle","markerTextWidth","enableMarkerClipping","markerStyle","width","testID","renderMarker"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@jsamr/react-native-li/lib/module/MarkerBox.tsx"],"sourcesContent":["import React from 'react';\nimport { Text, TextProps, View } from 'react-native';\nimport { MarkerBoxProps } from './shared-types';\n\nconst markerClipConfig: Partial<TextProps> = {\n  numberOfLines: 1,\n  ellipsizeMode: 'clip'\n};\n\n/**\n * Default component to render the list marker.\n *\n * See {@link https://www.w3.org/TR/css-lists-3/#marker-pseudo | CSS Lists and Counters Module Level 3, Markers}\n *\n * @public\n */\nexport default function MarkerBox({\n  style,\n  counterRenderer,\n  counterIndex,\n  markerTextStyle,\n  markerTextWidth,\n  enableMarkerClipping\n}: MarkerBoxProps) {\n  const markerStyle =\n    typeof markerTextWidth === 'number'\n      ? [markerTextStyle, { width: markerTextWidth }]\n      : markerTextStyle;\n  return (\n    <View style={style}>\n      <Text\n        {...(enableMarkerClipping ? markerClipConfig : null)}\n        testID=\"marker-box\"\n        style={markerStyle}>\n        {counterRenderer.renderMarker(counterIndex)}\n      </Text>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}