{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTTree;\nvar _react = require(\"react\");\nvar _ttreeEventsContext = _interopRequireDefault(require(\"../context/ttreeEventsContext\"));\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\nvar _TRenderEngineProvider = require(\"../TRenderEngineProvider\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction useTTreeChangeEffect(ttree) {\n  const {\n    onTTreeChange\n  } = (0, _react.useContext)(_ttreeEventsContext.default);\n  const {\n    debug\n  } = (0, _SharedPropsProvider.useSharedProps)();\n  const updateNumber = (0, _react.useRef)(0);\n  (0, _react.useEffect)(() => {\n    onTTreeChange === null || onTTreeChange === void 0 ? void 0 : onTTreeChange.call(null, ttree);\n    if (debug && typeof __DEV__ === 'boolean' && __DEV__) {\n      console.info(`Transient Render Tree update ${++updateNumber.current}:\\n${ttree.snapshot({\n        withNodeIndex: false,\n        withStyles: false\n      })}`);\n    }\n  }, [ttree, onTTreeChange, debug]);\n}\n/**\n * @internal\n */\n\nfunction useTTree(props) {\n  const {\n    document\n  } = props;\n  const trenderEngine = (0, _TRenderEngineProvider.useAmbientTRenderEngine)();\n  const ttree = (0, _react.useMemo)(() => typeof document === 'string' ? trenderEngine.buildTTree(document) : trenderEngine.buildTTreeFromDoc(document), [document, trenderEngine]);\n  useTTreeChangeEffect(ttree);\n  return ttree;\n}","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAGA,SAASA,oBAAT,CAA8BC,KAA9B,EAAgD;EAC9C,MAAM;IAAEC;EAAF,IAAoB,uBAAWC,2BAAX,CAA1B;EACA,MAAM;IAAEC;EAAF,IAAY,0CAAlB;EACA,MAAMC,YAAY,GAAG,mBAAO,CAAP,CAArB;EACA,sBAAU,MAAM;IACdH,aAAa,SAAb,iBAAa,WAAb,yBAAa,CAAEI,IAAf,CAAoB,IAApB,EAA0BL,KAA1B;IACA,IAAIG,KAAK,IAAI,OAAOG,OAAP,KAAmB,SAA5B,IAAyCA,OAA7C,EAAsD;MACpDC,OAAO,CAACC,IAAR,CACG,gCAA+B,EAAEJ,YAAY,CAACK,OAAQ,MAAKT,KAAK,CAACU,QAAN,CAC1D;QACEC,aAAa,EAAE,KADjB;QAEEC,UAAU,EAAE;MAFd,CAD0D,CAK1D,EANJ;IAQD;EACF,CAZD,EAYG,CAACZ,KAAD,EAAQC,aAAR,EAAuBE,KAAvB,CAZH;AAaD;AAED;AACA;AACA;;AACe,SAASU,QAAT,CAAkBC,KAAlB,EAA2C;EACxD,MAAM;IAAEC;EAAF,IAAeD,KAArB;EACA,MAAME,aAAa,GAAG,qDAAtB;EACA,MAAMhB,KAAK,GAAG,oBACZ,MACE,OAAOe,QAAP,KAAoB,QAApB,GACIC,aAAa,CAACC,UAAd,CAAyBF,QAAzB,CADJ,GAEIC,aAAa,CAACE,iBAAd,CAAgCH,QAAhC,CAJM,EAKZ,CAACA,QAAD,EAAWC,aAAX,CALY,CAAd;EAOAjB,oBAAoB,CAACC,KAAD,CAApB;EACA,OAAOA,KAAP;AACD","names":["useTTreeChangeEffect","ttree","onTTreeChange","ttreeEventsContext","debug","updateNumber","call","__DEV__","console","info","current","snapshot","withNodeIndex","withStyles","useTTree","props","document","trenderEngine","buildTTree","buildTTreeFromDoc"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/hooks/useTTree.ts"],"sourcesContent":["import { useMemo, useEffect, useRef, useContext } from 'react';\nimport ttreeEventsContext from '../context/ttreeEventsContext';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport { RenderTTreeProps } from '../internal-types';\nimport { useAmbientTRenderEngine } from '../TRenderEngineProvider';\nimport { TDocument } from '@native-html/transient-render-engine';\n\nfunction useTTreeChangeEffect(ttree: TDocument) {\n  const { onTTreeChange } = useContext(ttreeEventsContext);\n  const { debug } = useSharedProps();\n  const updateNumber = useRef(0);\n  useEffect(() => {\n    onTTreeChange?.call(null, ttree);\n    if (debug && typeof __DEV__ === 'boolean' && __DEV__) {\n      console.info(\n        `Transient Render Tree update ${++updateNumber.current}:\\n${ttree.snapshot(\n          {\n            withNodeIndex: false,\n            withStyles: false\n          }\n        )}`\n      );\n    }\n  }, [ttree, onTTreeChange, debug]);\n}\n\n/**\n * @internal\n */\nexport default function useTTree(props: RenderTTreeProps) {\n  const { document } = props;\n  const trenderEngine = useAmbientTRenderEngine();\n  const ttree = useMemo(\n    () =>\n      typeof document === 'string'\n        ? trenderEngine.buildTTree(document)\n        : trenderEngine.buildTTreeFromDoc(document),\n    [document, trenderEngine]\n  );\n  useTTreeChangeEffect(ttree);\n  return ttree;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}