{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useAssembledCommonProps;\nvar _mergeCollapsedMargins = _interopRequireDefault(require(\"../helpers/mergeCollapsedMargins\"));\nvar _RenderRegistryProvider = require(\"../context/RenderRegistryProvider\");\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * @internal\n */\nfunction useAssembledCommonProps(_ref, TDefault) {\n  let {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    renderIndex,\n    renderLength,\n    TNodeChildrenRenderer\n  } = _ref;\n  const {\n    Default,\n    Custom\n  } = (0, _RenderRegistryProvider.useRendererConfig)(tnode);\n  const containerProps = (0, _SharedPropsProvider.useDefaultContainerProps)();\n  const assembledProps = {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    TDefaultRenderer: TDefault,\n    TNodeChildrenRenderer,\n    style: (0, _mergeCollapsedMargins.default)(propsFromParent === null || propsFromParent === void 0 ? void 0 : propsFromParent.collapsedMarginTop, tnode.getNativeStyles()),\n    type: tnode.type === 'text' || tnode.type === 'phrasing' ? 'text' : 'block',\n    propsForChildren: tnode.tagName ? {} : propsFromParent,\n    InternalRenderer: Default || TDefault,\n    renderIndex,\n    renderLength,\n    ...containerProps\n  };\n  return {\n    assembledProps,\n    Renderer: Custom || Default || null\n  };\n}","map":{"version":3,"mappings":";;;;;;AAUA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACe,SAASA,uBAAT,OASbC,QATa,EAeb;EAAA,IAdA;IACEC,KADF;IAEEC,eAFF;IAGEC,WAHF;IAIEC,WAJF;IAKEC,YALF;IAMEC;EANF,CADa;EAgBb,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAsB,+CAAkBP,KAAlB,CAA5B;EACA,MAAMQ,cAAc,GAAG,oDAAvB;EACA,MAAMC,cAAiE,GAAG;IACxET,KADwE;IAExEC,eAFwE;IAGxEC,WAHwE;IAIxEQ,gBAAgB,EAAEX,QAJsD;IAKxEM,qBALwE;IAMxEM,KAAK,EAAE,oCACLV,eADK,aACLA,eADK,uBACLA,eAAe,CAAEW,kBADZ,EAELZ,KAAK,CAACa,eAAN,EAFK,CANiE;IAUxEC,IAAI,EAAEd,KAAK,CAACc,IAAN,KAAe,MAAf,IAAyBd,KAAK,CAACc,IAAN,KAAe,UAAxC,GAAqD,MAArD,GAA8D,OAVI;IAWxEC,gBAAgB,EAAEf,KAAK,CAACgB,OAAN,GAAgB,EAAhB,GAAqBf,eAXiC;IAYxEgB,gBAAgB,EAAEX,OAAO,IAAKP,QAZ0C;IAaxEI,WAbwE;IAcxEC,YAdwE;IAexE,GAAGI;EAfqE,CAA1E;EAiBA,OAAO;IACLC,cADK;IAELS,QAAQ,EAAEX,MAAM,IAAID,OAAV,IAAqB;EAF1B,CAAP;AAID","names":["useAssembledCommonProps","TDefault","tnode","propsFromParent","sharedProps","renderIndex","renderLength","TNodeChildrenRenderer","Default","Custom","containerProps","assembledProps","TDefaultRenderer","style","collapsedMarginTop","getNativeStyles","type","propsForChildren","tagName","InternalRenderer","Renderer"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/hooks/useAssembledCommonProps.ts"],"sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\nimport {\n  CustomRenderer,\n  CustomRendererProps,\n  InternalRenderer,\n  InternalRendererProps,\n  TDefaultRenderer,\n  TDefaultRendererProps\n} from '../shared-types';\nimport { TNodeSubRendererProps } from '../internal-types';\nimport mergeCollapsedMargins from '../helpers/mergeCollapsedMargins';\nimport { useRendererConfig } from '../context/RenderRegistryProvider';\nimport { useDefaultContainerProps } from '../context/SharedPropsProvider';\n\n/**\n * @internal\n */\nexport default function useAssembledCommonProps<T extends TNode>(\n  {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    renderIndex,\n    renderLength,\n    TNodeChildrenRenderer\n  }: TNodeSubRendererProps<T>,\n  TDefault: TDefaultRenderer<T> | null\n): {\n  Renderer: CustomRenderer<T> | InternalRenderer<T> | null;\n  assembledProps: CustomRendererProps<T> &\n    TDefaultRendererProps<T> &\n    InternalRendererProps<T>;\n} {\n  const { Default, Custom } = useRendererConfig(tnode);\n  const containerProps = useDefaultContainerProps();\n  const assembledProps: CustomRendererProps<T> & TDefaultRendererProps<T> = {\n    tnode,\n    propsFromParent,\n    sharedProps,\n    TDefaultRenderer: TDefault as TDefaultRenderer<T>,\n    TNodeChildrenRenderer,\n    style: mergeCollapsedMargins(\n      propsFromParent?.collapsedMarginTop,\n      tnode.getNativeStyles()\n    ) as any,\n    type: tnode.type === 'text' || tnode.type === 'phrasing' ? 'text' : 'block',\n    propsForChildren: tnode.tagName ? {} : propsFromParent,\n    InternalRenderer: Default || (TDefault as any),\n    renderIndex,\n    renderLength,\n    ...containerProps\n  };\n  return {\n    assembledProps,\n    Renderer: Custom || Default || null\n  };\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}