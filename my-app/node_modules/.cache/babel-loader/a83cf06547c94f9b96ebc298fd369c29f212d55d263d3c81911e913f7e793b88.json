{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _domhandler = require(\"domhandler\");\nvar _domUtils = require(\"./dom-utils\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nclass DomHandler extends _domhandler.DomHandler {\n  constructor(options) {\n    super(undefined, options, undefined);\n    _defineProperty(this, \"ignoredTags\", void 0);\n    _defineProperty(this, \"ignoredTagsCount\", -1);\n    _defineProperty(this, \"visitors\", void 0);\n    let ignoredTags = {};\n    for (const tag of options.ignoredTags || []) {\n      ignoredTags[tag] = true;\n    }\n    this.ignoredTags = ignoredTags;\n    this.visitors = options.visitors || {};\n    const isIgnored = this.isIgnored.bind(this);\n    if (options.ignoreNode) {\n      this.isIgnored = node => {\n        return isIgnored(node) || options.ignoreNode(node, this.tagStack[this.tagStack.length - 1]);\n      };\n    }\n  }\n  isIgnored(node) {\n    return this.ignoredTags[node.name] || this.ignoredTagsCount > -1;\n  }\n  addNode(node) {\n    if (this.isIgnored(node) === true) {\n      // increment only for elements.\n      if ((0, _domUtils.isDomElement)(node)) {\n        this.ignoredTagsCount++;\n      }\n    } else {\n      super.addNode(node);\n      if ((0, _domUtils.isDomText)(node)) {\n        var _this$visitors$onText, _this$visitors;\n        (_this$visitors$onText = (_this$visitors = this.visitors).onText) === null || _this$visitors$onText === void 0 ? void 0 : _this$visitors$onText.call(_this$visitors, node);\n      }\n    }\n  }\n  ontext(text) {\n    // Only include text when out of an\n    // ignoring session.\n    if (this.ignoredTagsCount < 0) {\n      super.ontext(text);\n    }\n  }\n  onopentag(name, attribs) {\n    super.onopentag(name, attribs);\n  }\n  onclosetag() {\n    var _this$visitors$onElem, _this$visitors2;\n\n    // Call onElement on close to give access to this node children\n    (_this$visitors$onElem = (_this$visitors2 = this.visitors).onElement) === null || _this$visitors$onElem === void 0 ? void 0 : _this$visitors$onElem.call(_this$visitors2, this.tagStack[this.tagStack.length - 1]);\n    super.onclosetag();\n    if (this.ignoredTagsCount > -1) {\n      this.ignoredTagsCount--;\n    }\n  }\n  onend() {\n    var _this$visitors$onDocu, _this$visitors3;\n    (_this$visitors$onDocu = (_this$visitors3 = this.visitors).onDocument) === null || _this$visitors$onDocu === void 0 ? void 0 : _this$visitors$onDocu.call(_this$visitors3, this.root);\n  }\n}\nexports.default = DomHandler;","map":{"version":3,"mappings":";;;;;;AAAA;AASA;;;;;;;;;;;;;;AAsCe,MAAMA,UAAN,SAAyBC,sBAAzB,CAA4C;EAKzDC,WAAW,CAACC,OAAD,EAA6B;IACtC,MAAMC,SAAN,EAAiBD,OAAjB,EAA0BC,SAA1B;IADsCC;IAAAA,0CAHb,CAAC,CAGY;IAAAA;IAEtC,IAAIC,WAAsC,GAAG,EAA7C;IACA,KAAK,MAAMC,GAAX,IAAkBJ,OAAO,CAACG,WAAR,IAAuB,EAAzC,EAA6C;MAC3CA,WAAW,CAACC,GAAD,CAAX,GAAmB,IAAnB;IACD;IACD,KAAKD,WAAL,GAAmBA,WAAnB;IACA,KAAKE,QAAL,GAAgBL,OAAO,CAACK,QAAR,IAAoB,EAApC;IACA,MAAMC,SAAS,GAAG,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlB;IACA,IAAIP,OAAO,CAACQ,UAAZ,EAAwB;MACtB,KAAKF,SAAL,GAAkBG,IAAD,IAAU;QACzB,OACEH,SAAS,CAACG,IAAD,CAAT,IACAT,OAAO,CAACQ,UAAR,CAAoBC,IAApB,EAA0B,KAAKC,QAAL,CAAc,KAAKA,QAAL,CAAcC,MAAd,GAAuB,CAArC,CAA1B,CAFF;MAID,CALD;IAMD;EACF;EAEDL,SAAS,CAACG,IAAD,EAAuC;IAC9C,OACG,KAAKN,WAAL,CAAkBM,IAAD,CAAkBG,IAAnC,CAAD,IACA,KAAKC,gBAAL,GAAwB,CAAC,CAF3B;EAID;EAEDC,OAAO,CAACL,IAAD,EAAmB;IACxB,IAAI,KAAKH,SAAL,CAAeG,IAAf,MAAyB,IAA7B,EAAmC;MACjC;MACA,IAAI,4BAAaA,IAAb,CAAJ,EAAwB;QACtB,KAAKI,gBAAL;MACD;IACF,CALD,MAKO;MACL,MAAMC,OAAN,CAAcL,IAAd;MACA,IAAI,yBAAUA,IAAV,CAAJ,EAAqB;QAAA;QACnB,gDAAKJ,QAAL,EAAcU,MAAd,qGAAuBN,IAAvB;MACD;IACF;EACF;EAEDO,MAAM,CAACC,IAAD,EAAe;IACnB;IACA;IACA,IAAI,KAAKJ,gBAAL,GAAwB,CAA5B,EAA+B;MAC7B,MAAMG,MAAN,CAAaC,IAAb;IACD;EACF;EAEDC,SAAS,CAACN,IAAD,EAAeO,OAAf,EAAmC;IAC1C,MAAMD,SAAN,CAAgBN,IAAhB,EAAsBO,OAAtB;EACD;EAEDC,UAAU,GAAG;IAAA;;IACX;IACA,iDAAKf,QAAL,EAAcgB,SAAd,sGACE,KAAKX,QAAL,CAAc,KAAKA,QAAL,CAAcC,MAAd,GAAuB,CAArC,CADF;IAGA,MAAMS,UAAN;IACA,IAAI,KAAKP,gBAAL,GAAwB,CAAC,CAA7B,EAAgC;MAC9B,KAAKA,gBAAL;IACD;EACF;EAEDS,KAAK,GAAS;IAAA;IACZ,iDAAKjB,QAAL,EAAckB,UAAd,sGAA2B,KAAKC,IAAhC;EACD;AAtEwD","names":["DomHandler","OriginalDomHandler","constructor","options","undefined","_defineProperty","ignoredTags","tag","visitors","isIgnored","bind","ignoreNode","node","tagStack","length","name","ignoredTagsCount","addNode","onText","ontext","text","onopentag","attribs","onclosetag","onElement","onend","onDocument","root"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@native-html/transient-render-engine/lib/commonjs/dom/DomHandler.ts"],"sourcesContent":["import {\n  DomHandler as OriginalDomHandler,\n  DomHandlerOptions as OriginalDomHandlerOptions,\n  Document,\n  Element,\n  Node,\n  Text,\n  NodeWithChildren\n} from 'domhandler';\nimport { isDomElement, isDomText } from './dom-utils';\n\n/**\n * A record of callback to visit the DOM.\n *\n * @public\n */\nexport interface DomVisitorCallbacks {\n  /**\n   * A callback invoked when encountering a {@link Document}.\n   *\n   * @param document - The document to visit.\n   *\n   */\n  onDocument?(document: Document): void;\n  /**\n   * A callback invoked when encountering an {@link Element}.\n   *\n   * @param element - The element to visit.\n   */\n  onElement?(element: Element): void;\n  /**\n   * A callback invoked when encountering a {@link Text} node.\n   *\n   * @param text - The text to visit.\n   */\n  onText?(text: Text): void;\n}\n\nexport interface DomHandlerOptions extends OriginalDomHandlerOptions {\n  ignoredTags?: string[];\n  visitors?: DomVisitorCallbacks;\n  ignoreNode?: (\n    node: Node,\n    parent: NodeWithChildren\n  ) => boolean | void | unknown;\n}\n\nexport default class DomHandler extends OriginalDomHandler {\n  private ignoredTags: Record<string, boolean>;\n  private ignoredTagsCount = -1;\n  private visitors: DomVisitorCallbacks;\n\n  constructor(options: DomHandlerOptions) {\n    super(undefined, options, undefined);\n    let ignoredTags: DomHandler['ignoredTags'] = {};\n    for (const tag of options.ignoredTags || []) {\n      ignoredTags[tag] = true;\n    }\n    this.ignoredTags = ignoredTags;\n    this.visitors = options.visitors || {};\n    const isIgnored = this.isIgnored.bind(this);\n    if (options.ignoreNode) {\n      this.isIgnored = (node) => {\n        return (\n          isIgnored(node) ||\n          options.ignoreNode!(node, this.tagStack[this.tagStack.length - 1])\n        );\n      };\n    }\n  }\n\n  isIgnored(node: Node): boolean | unknown | void {\n    return (\n      (this.ignoredTags[(node as Element).name] as boolean) ||\n      this.ignoredTagsCount > -1\n    );\n  }\n\n  addNode(node: Node): void {\n    if (this.isIgnored(node) === true) {\n      // increment only for elements.\n      if (isDomElement(node)) {\n        this.ignoredTagsCount++;\n      }\n    } else {\n      super.addNode(node);\n      if (isDomText(node)) {\n        this.visitors.onText?.(node);\n      }\n    }\n  }\n\n  ontext(text: string) {\n    // Only include text when out of an\n    // ignoring session.\n    if (this.ignoredTagsCount < 0) {\n      super.ontext(text);\n    }\n  }\n\n  onopentag(name: string, attribs: any): void {\n    super.onopentag(name, attribs);\n  }\n\n  onclosetag() {\n    // Call onElement on close to give access to this node children\n    this.visitors.onElement?.(\n      this.tagStack[this.tagStack.length - 1] as Element\n    );\n    super.onclosetag();\n    if (this.ignoredTagsCount > -1) {\n      this.ignoredTagsCount--;\n    }\n  }\n\n  onend(): void {\n    this.visitors.onDocument?.(this.root);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}