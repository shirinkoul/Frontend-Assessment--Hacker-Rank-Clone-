{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDocumentMetadata = useDocumentMetadata;\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst DocumentMetadataContext = /*#__PURE__*/_react.default.createContext({\n  baseUrl: '',\n  baseTarget: '_self',\n  lang: 'en',\n  links: [],\n  meta: [],\n  title: '',\n  dir: 'ltr'\n});\nconst DocumentMetadataProvider = DocumentMetadataContext.Provider;\n/**\n * Get access to the parsed HTML metadata anywhere in the render tree.\n */\n\nfunction useDocumentMetadata() {\n  return (0, _react.useContext)(DocumentMetadataContext);\n}\nvar _default = DocumentMetadataProvider;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,MAAMA,uBAAuB,gBAAGC,eAAMC,aAAN,CAAsC;EACpEC,OAAO,EAAE,EAD2D;EAEpEC,UAAU,EAAE,OAFwD;EAGpEC,IAAI,EAAE,IAH8D;EAIpEC,KAAK,EAAE,EAJ6D;EAKpEC,IAAI,EAAE,EAL8D;EAMpEC,KAAK,EAAE,EAN6D;EAOpEC,GAAG,EAAE;AAP+D,CAAtC,CAAhC;AAUA,MAAMC,wBAAwB,GAAGV,uBAAuB,CAACW,QAAzD;AAEA;AACA;AACA;;AACO,SAASC,mBAAT,GAA+B;EACpC,OAAO,uBAAWZ,uBAAX,CAAP;AACD;eAEcU,wB","names":["DocumentMetadataContext","React","createContext","baseUrl","baseTarget","lang","links","meta","title","dir","DocumentMetadataProvider","Provider","useDocumentMetadata"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/context/DocumentMetadataProvider.ts"],"sourcesContent":["import React, { useContext } from 'react';\nimport { DocumentMetadata } from '../shared-types';\n\nconst DocumentMetadataContext = React.createContext<DocumentMetadata>({\n  baseUrl: '',\n  baseTarget: '_self',\n  lang: 'en',\n  links: [],\n  meta: [],\n  title: '',\n  dir: 'ltr'\n});\n\nconst DocumentMetadataProvider = DocumentMetadataContext.Provider;\n\n/**\n * Get access to the parsed HTML metadata anywhere in the render tree.\n */\nexport function useDocumentMetadata() {\n  return useContext(DocumentMetadataContext);\n}\n\nexport default DocumentMetadataProvider;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}