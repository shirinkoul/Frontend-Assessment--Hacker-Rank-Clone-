{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongAspectRatioPropertyValidator = void 0;\nvar _LongCSSPropertyValidator = require(\"./LongCSSPropertyValidator\");\nconst ASPECT_RATIO_REGEX = /^(\\d+)\\/(\\d+)$/;\nclass LongAspectRatioPropertyValidator extends _LongCSSPropertyValidator.LongCSSPropertyValidator {\n  normalizeRawInlineCSSValue(value) {\n    const match = ASPECT_RATIO_REGEX.exec(value);\n    if (match) {\n      const ratio = Number(match[1]) / Number(match[2]);\n      return Number.isFinite(ratio) ? ratio : null;\n    }\n    const fallback = Number(value);\n    return Number.isNaN(fallback) ? null : fallback;\n  }\n  normalizeNativeValue(value) {\n    return typeof value !== 'string' ? value : this.normalizeRawInlineCSSValue(value);\n  }\n}\nexports.LongAspectRatioPropertyValidator = LongAspectRatioPropertyValidator;","map":{"version":3,"mappings":";;;;;;AAAA;AAGA,MAAMA,kBAAkB,GAAG,gBAA3B;AAEO,MAAMC,gCAAN,SAEGC,kDAFH,CAEuC;EAC5CC,0BAA0B,CAACC,KAAD,EAA+B;IACvD,MAAMC,KAAK,GAAGL,kBAAkB,CAACM,IAAnB,CAAwBF,KAAxB,CAAd;IACA,IAAIC,KAAJ,EAAW;MACT,MAAME,KAAK,GAAGC,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAAN,GAAmBG,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAAvC;MACA,OAAOG,MAAM,CAACC,QAAP,CAAgBF,KAAhB,IAAyBA,KAAzB,GAAiC,IAAxC;IACD;IACD,MAAMG,QAAQ,GAAGF,MAAM,CAACJ,KAAD,CAAvB;IACA,OAAOI,MAAM,CAACG,KAAP,CAAaD,QAAb,IAAyB,IAAzB,GAAgCA,QAAvC;EACD;EAEDE,oBAAoB,CAACR,KAAD,EAAwC;IAC1D,OAAO,OAAOA,KAAP,KAAiB,QAAjB,GACHA,KADG,GAEH,KAAKD,0BAAL,CAAgCC,KAAhC,CAFJ;EAGD;AAf2C","names":["ASPECT_RATIO_REGEX","LongAspectRatioPropertyValidator","LongCSSPropertyValidator","normalizeRawInlineCSSValue","value","match","exec","ratio","Number","isFinite","fallback","isNaN","normalizeNativeValue"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@native-html/css-processor/lib/commonjs/validators/LongAspectRatioPropertyValidator.ts"],"sourcesContent":["import { LongCSSPropertyValidator } from './LongCSSPropertyValidator';\nimport { CSSPropertyModel } from './types';\n\nconst ASPECT_RATIO_REGEX = /^(\\d+)\\/(\\d+)$/;\n\nexport class LongAspectRatioPropertyValidator<\n  C extends CSSPropertyModel\n> extends LongCSSPropertyValidator<C, number> {\n  normalizeRawInlineCSSValue(value: string): number | null {\n    const match = ASPECT_RATIO_REGEX.exec(value);\n    if (match) {\n      const ratio = Number(match[1]) / Number(match[2]);\n      return Number.isFinite(ratio) ? ratio : null;\n    }\n    const fallback = Number(value);\n    return Number.isNaN(fallback) ? null : fallback;\n  }\n\n  normalizeNativeValue(value: string | number): number | null {\n    return typeof value !== 'string'\n      ? value\n      : this.normalizeRawInlineCSSValue(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}