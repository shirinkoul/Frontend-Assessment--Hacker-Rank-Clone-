{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { I18nManager } from 'react-native';\nimport MarkerBox from './MarkerBox';\nconst defaultRenderMarker = props => /*#__PURE__*/React.createElement(MarkerBox, props);\nconst defaultComputeMarkerBoxWidth = (maxNumOfCodepoints, fontSize) => maxNumOfCodepoints * fontSize * 0.6;\nconst DEFAULT_FONT_SIZE = 14;\n/**\n * A hook to reuse MarkedList logic to render custom lists components in\n * combination with {@link MarkedListItem}.\n *\n * @public\n */\n\nexport default function useMarkedList(_ref) {\n  let {\n    counterRenderer,\n    startIndex = 1,\n    lineStyle,\n    rtlLineReversed = false,\n    rtlMarkerReversed = false,\n    markerTextStyle,\n    markerBoxStyle,\n    dynamicMarkerBoxWidth = true,\n    length = 0,\n    renderMarker = defaultRenderMarker,\n    enableMarkerClipping = false,\n    computeMarkerBoxWidth = defaultComputeMarkerBoxWidth\n  } = _ref;\n  const maxNumOfCodepoints = useMemo(() => counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1), [counterRenderer, length, startIndex]);\n  const syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  const markerTextWidth = useMemo(() => {\n    var _markerTextStyle$font;\n    return dynamicMarkerBoxWidth && computeMarkerBoxWidth(maxNumOfCodepoints, (_markerTextStyle$font = markerTextStyle === null || markerTextStyle === void 0 ? void 0 : markerTextStyle.fontSize) !== null && _markerTextStyle$font !== void 0 ? _markerTextStyle$font : DEFAULT_FONT_SIZE);\n  }, [computeMarkerBoxWidth, markerTextStyle === null || markerTextStyle === void 0 ? void 0 : markerTextStyle.fontSize, maxNumOfCodepoints, dynamicMarkerBoxWidth]);\n  const renderer = useMemo(() => rtlMarkerReversed ? counterRenderer.withRtl(rtlMarkerReversed === true ? undefined : rtlMarkerReversed) : counterRenderer, [counterRenderer, rtlMarkerReversed]);\n  const syntheticMarkerTextStyle = useMemo(() => ({\n    flexGrow: 0,\n    flexShrink: 0,\n    fontSize: DEFAULT_FONT_SIZE,\n    textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n    alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end',\n    ...markerTextStyle\n  }), [markerTextStyle, syntheticRtlLineReversed]);\n  return {\n    maxNumOfCodepoints,\n    rtlMarkerReversed,\n    markerTextWidth,\n    renderMarker,\n    startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle,\n    counterRenderer: renderer,\n    style: lineStyle,\n    enableMarkerClipping\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAIA,MAAMC,mBAAiE,GACrEC,KADwE,iBAErEL,KAAK,CAACM,aAAN,CAAoBH,SAApB,EAA+BE,KAA/B,CAFL;AAIA,MAAME,4BAEL,GAAG,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAArB,GAAgC,GAFtE;AAIA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,OAa8D;EAAA,IAbvC;IACpCC,eADoC;IAEpCC,UAAU,GAAG,CAFuB;IAGpCC,SAHoC;IAIpCC,eAAe,GAAG,KAJkB;IAKpCC,iBAAiB,GAAG,KALgB;IAMpCC,eANoC;IAOpCC,cAPoC;IAQpCC,qBAAqB,GAAG,IARY;IASpCC,MAAM,GAAG,CAT2B;IAUpCC,YAAY,GAAGjB,mBAVqB;IAWpCkB,oBAAoB,GAAG,KAXa;IAYpCC,qBAAqB,GAAGhB;EAZY,CAAvB;EAcb,MAAMC,kBAAkB,GAAGP,OAAO,CAChC,MACEW,eAAe,CAACY,mBAAhB,CAAoCX,UAApC,EAAgDA,UAAU,GAAGO,MAAb,GAAsB,CAAtE,CAF8B,EAGhC,CAACR,eAAD,EAAkBQ,MAAlB,EAA0BP,UAA1B,CAHgC,CAAlC;EAKA,MAAMY,wBAAwB,GAAG,CAACvB,WAAW,CAACwB,KAAb,IAAsBX,eAAvD;EACA,MAAMY,eAAe,GAAG1B,OAAO,CAC7B;IAAA;IAAA,OACEkB,qBAAqB,IACrBI,qBAAqB,CACnBf,kBADmB,2BAEnBS,eAFmB,aAEnBA,eAFmB,uBAEnBA,eAAe,CAAER,QAFE,yEAEUC,iBAFV,CAFvB;EAAA,CAD6B,EAO7B,CACEa,qBADF,EAEEN,eAFF,aAEEA,eAFF,uBAEEA,eAAe,CAAER,QAFnB,EAGED,kBAHF,EAIEW,qBAJF,CAP6B,CAA/B;EAcA,MAAMS,QAAQ,GAAG3B,OAAO,CACtB,MACEe,iBAAiB,GACbJ,eAAe,CAACiB,OAAhB,CACEb,iBAAiB,KAAK,IAAtB,GAA6Bc,SAA7B,GAAyCd,iBAD3C,CADa,GAIbJ,eANgB,EAOtB,CAACA,eAAD,EAAkBI,iBAAlB,CAPsB,CAAxB;EASA,MAAMe,wBAAwB,GAAG9B,OAAO,CACtC,OACG;IACC+B,QAAQ,EAAE,CADX;IAECC,UAAU,EAAE,CAFb;IAGCxB,QAAQ,EAAEC,iBAHX;IAICwB,SAAS,EAAET,wBAAwB,GAAG,MAAH,GAAY,OAJhD;IAKCU,SAAS,EAAEV,wBAAwB,GAAG,YAAH,GAAkB,UALtD;IAMC,GAAGR;EANJ,CADH,CADsC,EAUtC,CAACA,eAAD,EAAkBQ,wBAAlB,CAVsC,CAAxC;EAYA,OAAO;IACLjB,kBADK;IAELQ,iBAFK;IAGLW,eAHK;IAILN,YAJK;IAKLR,UALK;IAMLE,eAAe,EAAEU,wBANZ;IAOLR,eAAe,EAAEc,wBAPZ;IAQLb,cAAc,EAAEA,cARX;IASLN,eAAe,EAAEgB,QATZ;IAULQ,KAAK,EAAEtB,SAVF;IAWLQ;EAXK,CAAP;AAaD","names":["React","useMemo","I18nManager","MarkerBox","defaultRenderMarker","props","createElement","defaultComputeMarkerBoxWidth","maxNumOfCodepoints","fontSize","DEFAULT_FONT_SIZE","useMarkedList","counterRenderer","startIndex","lineStyle","rtlLineReversed","rtlMarkerReversed","markerTextStyle","markerBoxStyle","dynamicMarkerBoxWidth","length","renderMarker","enableMarkerClipping","computeMarkerBoxWidth","maxMarkerLenInRange","syntheticRtlLineReversed","isRTL","markerTextWidth","renderer","withRtl","undefined","syntheticMarkerTextStyle","flexGrow","flexShrink","textAlign","alignSelf","style"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@jsamr/react-native-li/lib/module/useMarkedList.ts"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { I18nManager } from 'react-native';\nimport MarkerBox from './MarkerBox';\nimport { MarkedListItemProps } from './MarkedListItem';\nimport { MarkedListProps } from './shared-types';\n\nconst defaultRenderMarker: NonNullable<MarkedListProps['renderMarker']> = (\n  props\n) => React.createElement(MarkerBox, props);\n\nconst defaultComputeMarkerBoxWidth: NonNullable<\n  MarkedListProps['computeMarkerBoxWidth']\n> = (maxNumOfCodepoints, fontSize) => maxNumOfCodepoints * fontSize * 0.6;\n\nconst DEFAULT_FONT_SIZE = 14;\n\n/**\n * A hook to reuse MarkedList logic to render custom lists components in\n * combination with {@link MarkedListItem}.\n *\n * @public\n */\nexport default function useMarkedList({\n  counterRenderer,\n  startIndex = 1,\n  lineStyle,\n  rtlLineReversed = false,\n  rtlMarkerReversed = false,\n  markerTextStyle,\n  markerBoxStyle,\n  dynamicMarkerBoxWidth = true,\n  length = 0,\n  renderMarker = defaultRenderMarker,\n  enableMarkerClipping = false,\n  computeMarkerBoxWidth = defaultComputeMarkerBoxWidth\n}: MarkedListProps & { length: number }): Omit<MarkedListItemProps, 'index'> {\n  const maxNumOfCodepoints = useMemo(\n    () =>\n      counterRenderer.maxMarkerLenInRange(startIndex, startIndex + length - 1),\n    [counterRenderer, length, startIndex]\n  );\n  const syntheticRtlLineReversed = !I18nManager.isRTL && rtlLineReversed;\n  const markerTextWidth = useMemo(\n    () =>\n      dynamicMarkerBoxWidth &&\n      computeMarkerBoxWidth(\n        maxNumOfCodepoints,\n        markerTextStyle?.fontSize ?? DEFAULT_FONT_SIZE\n      ),\n    [\n      computeMarkerBoxWidth,\n      markerTextStyle?.fontSize,\n      maxNumOfCodepoints,\n      dynamicMarkerBoxWidth\n    ]\n  );\n  const renderer = useMemo(\n    () =>\n      rtlMarkerReversed\n        ? counterRenderer.withRtl(\n            rtlMarkerReversed === true ? undefined : rtlMarkerReversed\n          )\n        : counterRenderer,\n    [counterRenderer, rtlMarkerReversed]\n  );\n  const syntheticMarkerTextStyle = useMemo(\n    () =>\n      ({\n        flexGrow: 0,\n        flexShrink: 0,\n        fontSize: DEFAULT_FONT_SIZE,\n        textAlign: syntheticRtlLineReversed ? 'left' : 'right',\n        alignSelf: syntheticRtlLineReversed ? 'flex-start' : 'flex-end',\n        ...markerTextStyle\n      } as const),\n    [markerTextStyle, syntheticRtlLineReversed]\n  );\n  return {\n    maxNumOfCodepoints,\n    rtlMarkerReversed,\n    markerTextWidth,\n    renderMarker,\n    startIndex,\n    rtlLineReversed: syntheticRtlLineReversed,\n    markerTextStyle: syntheticMarkerTextStyle,\n    markerBoxStyle: markerBoxStyle as any,\n    counterRenderer: renderer,\n    style: lineStyle,\n    enableMarkerClipping\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}