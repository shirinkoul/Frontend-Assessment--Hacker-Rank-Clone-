{"ast":null,"code":"export default function makeAlphanumMaxlenComputer(base, alpha) {\n  return function alphanumericMaxLenComputer(_min, max) {\n    let remax = max - Number(alpha);\n    let digits = 1;\n    while (remax >= base) {\n      remax /= base;\n      digits++;\n    }\n    return digits;\n  };\n}","map":{"version":3,"mappings":"AAAA,eAAc,SAAUA,0BAA0B,CAChDC,IAAY,EACZC,KAAc;EAEd,OAAO,SAASC,0BAA0B,CAACC,IAAY,EAAEC,GAAW;IAClE,IAAIC,KAAK,GAAGD,GAAG,GAAGE,MAAM,CAACL,KAAK,CAAC;IAC/B,IAAIM,MAAM,GAAW,CAAC;IACtB,OAAOF,KAAK,IAAIL,IAAI,EAAE;MACpBK,KAAK,IAAIL,IAAI;MACbO,MAAM,EAAE;;IAEV,OAAOA,MAAM;EACf,CAAC;AACH","names":["makeAlphanumMaxlenComputer","base","alpha","alphanumericMaxLenComputer","_min","max","remax","Number","digits"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@jsamr/counter-style/src/makeAlphanumMaxlenComputer.ts"],"sourcesContent":["export default function makeAlphanumMaxlenComputer(\n  base: number,\n  alpha: boolean\n) {\n  return function alphanumericMaxLenComputer(_min: number, max: number) {\n    let remax = max - Number(alpha);\n    let digits: number = 1;\n    while (remax >= base) {\n      remax /= base;\n      digits++;\n    }\n    return digits;\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}