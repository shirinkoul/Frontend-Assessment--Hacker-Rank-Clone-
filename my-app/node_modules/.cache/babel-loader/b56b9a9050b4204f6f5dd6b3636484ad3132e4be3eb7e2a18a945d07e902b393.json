{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeCollapsibleAroundSegmentBreak = removeCollapsibleAroundSegmentBreak;\nexports.removeConsecutiveSegmentBreaks = removeConsecutiveSegmentBreaks;\nexports.normalizeZeroWidthWhitespaces = normalizeZeroWidthWhitespaces;\nexports.removeLineBreaksAroundEastAsianDiscardSet = removeLineBreaksAroundEastAsianDiscardSet;\nexports.replaceSegmentBreaks = replaceSegmentBreaks;\nexports.normalizeWhitespaces = normalizeWhitespaces;\n// TODO, when React Native supports unicode regexes,\n// we should use `p{Zs}` instead of [ \\t] to comply\n// with the CSS3 Text Module standard. https://www.w3.org/TR/css-text-3/#spaces\nconst COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX = /[ \\t]*[\\r\\n\\f]+[ \\t]*/g;\nconst CONSECUTIVE_SEGMENT_BREAKS_REGEX = /[\\r\\n\\f]+/g;\nconst ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX = /(\\u200b\\n\\u200b?|\\u200b?\\n\\u200b)/g;\nconst SPACE_DISCARDING_CHARSET_REGEX = /([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])\\n([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])/g;\nconst SEGMENT_BREAK_REGEX = /\\n/g;\nconst SUBSEQUENT_WHITESPACE_REGEX = /[ \\t]+/g; // Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-1\n\nfunction removeCollapsibleAroundSegmentBreak(data) {\n  return data.replace(COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX, '\\n');\n} // Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#line-break-transform\n\nfunction removeConsecutiveSegmentBreaks(data) {\n  return data.replace(CONSECUTIVE_SEGMENT_BREAKS_REGEX, '\\n');\n} // Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\n\nfunction normalizeZeroWidthWhitespaces(data) {\n  return data.replace(ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX, '\\u200b');\n} // Partial implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n//\n// Because RN Javascript runtime doesn't support String.fromCharCode, we don't support space discarding\n// for character ranges above U+FFFF\n//\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\n\nfunction removeLineBreaksAroundEastAsianDiscardSet(data) {\n  return data.replace(SPACE_DISCARDING_CHARSET_REGEX, '$1$2');\n} // Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.1)\n\nfunction replaceSegmentBreaks(data) {\n  return data.replace(SEGMENT_BREAK_REGEX, ' ');\n} // Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.4)\n\nfunction normalizeWhitespaces(data) {\n  return data.replace(SUBSEQUENT_WHITESPACE_REGEX, ' ');\n}","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA,MAAMA,sCAAsC,GAAG,wBAA/C;AACA,MAAMC,gCAAgC,GAAG,YAAzC;AACA,MAAMC,6CAA6C,GACjD,oCADF;AAEA,MAAMC,8BAA8B,GAClC,qhBADF;AAEA,MAAMC,mBAAmB,GAAG,KAA5B;AACA,MAAMC,2BAA2B,GAAG,SAApC,C,CAEA;AACA;;AACO,SAASC,mCAAT,CAA6CC,IAA7C,EAAmE;EACxE,OAAOA,IAAI,CAACC,OAAL,CAAaR,sCAAb,EAAqD,IAArD,CAAP;AACD,C,CAED;AACA;;AACO,SAASS,8BAAT,CAAwCF,IAAxC,EAA8D;EACnE,OAAOA,IAAI,CAACC,OAAL,CAAaP,gCAAb,EAA+C,IAA/C,CAAP;AACD,C,CAED;AACA;AACA;AACA;;AACO,SAASS,6BAAT,CAAuCH,IAAvC,EAA6D;EAClE,OAAOA,IAAI,CAACC,OAAL,CAAaN,6CAAb,EAA4D,QAA5D,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASS,yCAAT,CACLJ,IADK,EAEG;EACR,OAAOA,IAAI,CAACC,OAAL,CAAaL,8BAAb,EAA6C,MAA7C,CAAP;AACD,C,CAED;AACA;AACA;;AACO,SAASS,oBAAT,CAA8BL,IAA9B,EAAoD;EACzD,OAAOA,IAAI,CAACC,OAAL,CAAaJ,mBAAb,EAAkC,GAAlC,CAAP;AACD,C,CAED;AACA;AACA;;AACO,SAASS,oBAAT,CAA8BN,IAA9B,EAAoD;EACzD,OAAOA,IAAI,CAACC,OAAL,CAAaH,2BAAb,EAA0C,GAA1C,CAAP;AACD","names":["COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX","CONSECUTIVE_SEGMENT_BREAKS_REGEX","ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX","SPACE_DISCARDING_CHARSET_REGEX","SEGMENT_BREAK_REGEX","SUBSEQUENT_WHITESPACE_REGEX","removeCollapsibleAroundSegmentBreak","data","replace","removeConsecutiveSegmentBreaks","normalizeZeroWidthWhitespaces","removeLineBreaksAroundEastAsianDiscardSet","replaceSegmentBreaks","normalizeWhitespaces"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@native-html/transient-render-engine/lib/commonjs/flow/text-transforms.ts"],"sourcesContent":["// TODO, when React Native supports unicode regexes,\n// we should use `p{Zs}` instead of [ \\t] to comply\n// with the CSS3 Text Module standard. https://www.w3.org/TR/css-text-3/#spaces\nconst COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX = /[ \\t]*[\\r\\n\\f]+[ \\t]*/g;\nconst CONSECUTIVE_SEGMENT_BREAKS_REGEX = /[\\r\\n\\f]+/g;\nconst ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX =\n  /(\\u200b\\n\\u200b?|\\u200b?\\n\\u200b)/g;\nconst SPACE_DISCARDING_CHARSET_REGEX =\n  /([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])\\n([\\u2E80-\\u2EFF\\u2F00-\\u2FDF\\u2FF0-\\u2FFF\\u3000-\\u303F\\u3040-\\u309F\\u30A0-\\u30FF\\u3130-\\u318F\\u3190-\\u319F\\u31C0-\\u31EF\\u31F0-\\u31FF\\u3300-\\u33FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uA000-\\uA48F\\uA490-\\uA4CF\\uF900-\\uFAFF\\uFE10-\\uFE1F\\uFE30-\\uFE4F\\uFE50-\\uFE6F\\uFF00-\\uFFEF])/g;\nconst SEGMENT_BREAK_REGEX = /\\n/g;\nconst SUBSEQUENT_WHITESPACE_REGEX = /[ \\t]+/g;\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-1\nexport function removeCollapsibleAroundSegmentBreak(data: string): string {\n  return data.replace(COLLAPSIBLE_AROUND_SEGMENT_BREAK_REGEX, '\\n');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#line-break-transform\nexport function removeConsecutiveSegmentBreaks(data: string): string {\n  return data.replace(CONSECUTIVE_SEGMENT_BREAKS_REGEX, '\\n');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\nexport function normalizeZeroWidthWhitespaces(data: string): string {\n  return data.replace(ZERO_WIDTH_SPACES_AROUND_SEGMENT_BREAKS_REGEX, '\\u200b');\n}\n\n// Partial implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20200429/#line-break-transform\n//\n// Because RN Javascript runtime doesn't support String.fromCharCode, we don't support space discarding\n// for character ranges above U+FFFF\n//\n// In the latest version (https://www.w3.org/TR/2020/WD-css-text-3-20201119/),\n// the behavior is considered at UA discretion.\nexport function removeLineBreaksAroundEastAsianDiscardSet(\n  data: string\n): string {\n  return data.replace(SPACE_DISCARDING_CHARSET_REGEX, '$1$2');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.1)\nexport function replaceSegmentBreaks(data: string): string {\n  return data.replace(SEGMENT_BREAK_REGEX, ' ');\n}\n\n// Implementation of\n// https://www.w3.org/TR/2020/WD-css-text-3-20201119/#white-space-phase-2\n// (A.4)\nexport function normalizeWhitespaces(data: string): string {\n  return data.replace(SUBSEQUENT_WHITESPACE_REGEX, ' ');\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}