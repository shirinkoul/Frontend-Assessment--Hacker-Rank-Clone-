{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShortCardinalCSSpropertyValidator = void 0;\nvar _ShortMergeRequest = require(\"../ShortMergeRequest\");\nvar _ShortCSSPropertyValidator = require(\"./ShortCSSPropertyValidator\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nconst WHITESPACE_REGEX = /\\s+/;\nclass ShortCardinalCSSpropertyValidator extends _ShortCSSPropertyValidator.ShortCSSPropertyValidator {\n  constructor(params,\n  /**\n   * Top, Right, Bottom, Left\n   */\n  directions) {\n    super(params);\n    _defineProperty(this, \"directions\", void 0);\n    this.directions = directions;\n  }\n  normalizeInlineCSSValue(value) {\n    if (typeof value === 'number') {\n      return new _ShortMergeRequest.ShortMergeRequest({\n        [this.directions.top]: value,\n        [this.directions.right]: value,\n        [this.directions.bottom]: value,\n        [this.directions.left]: value\n      });\n    }\n    const values = value.split(WHITESPACE_REGEX);\n    if (values.length === 4) {\n      return new _ShortMergeRequest.ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[3]\n      });\n    }\n    if (values.length === 3) {\n      return new _ShortMergeRequest.ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 2) {\n      return new _ShortMergeRequest.ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 1) {\n      return new _ShortMergeRequest.ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[0],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[0]\n      });\n    }\n    return null;\n  }\n  normalizeNativeValue(value) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\nexports.ShortCardinalCSSpropertyValidator = ShortCardinalCSSpropertyValidator;","map":{"version":3,"mappings":"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","names":["WHITESPACE_REGEX","ShortCardinalCSSpropertyValidator","ShortCSSPropertyValidator","constructor","params","directions","_defineProperty","normalizeInlineCSSValue","value","ShortMergeRequest","top","right","bottom","left","values","split","length","normalizeNativeValue"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/@native-html/css-processor/lib/commonjs/validators/ShortCardinalCSSPropertyValidator.ts"],"sourcesContent":["import { ShortMergeRequest } from '../ShortMergeRequest';\nimport { ShortCSSPropertyValidator } from './ShortCSSPropertyValidator';\nimport { CSSPropertyModel, ShortCSSPropertyValidatorParams } from './types';\n\nexport type Directions = {\n  top: string;\n  bottom: string;\n  left: string;\n  right: string;\n};\n\nconst WHITESPACE_REGEX = /\\s+/;\n\nexport class ShortCardinalCSSpropertyValidator<\n  C extends CSSPropertyModel = any\n> extends ShortCSSPropertyValidator<C> {\n  public directions: Readonly<Directions>;\n  constructor(\n    params: ShortCSSPropertyValidatorParams<C>,\n    /**\n     * Top, Right, Bottom, Left\n     */\n    directions: Readonly<Directions>\n  ) {\n    super(params);\n    this.directions = directions;\n  }\n\n  normalizeInlineCSSValue(value: string | number) {\n    if (typeof value === 'number') {\n      return new ShortMergeRequest({\n        [this.directions.top]: value,\n        [this.directions.right]: value,\n        [this.directions.bottom]: value,\n        [this.directions.left]: value\n      });\n    }\n    const values = value.split(WHITESPACE_REGEX);\n    if (values.length === 4) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[3]\n      });\n    }\n    if (values.length === 3) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[2],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 2) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[1],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[1]\n      });\n    }\n    if (values.length === 1) {\n      return new ShortMergeRequest({\n        [this.directions.top]: values[0],\n        [this.directions.right]: values[0],\n        [this.directions.bottom]: values[0],\n        [this.directions.left]: values[0]\n      });\n    }\n    return null;\n  }\n\n  normalizeNativeValue(value: string | number) {\n    return this.normalizeInlineCSSValue(value);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}