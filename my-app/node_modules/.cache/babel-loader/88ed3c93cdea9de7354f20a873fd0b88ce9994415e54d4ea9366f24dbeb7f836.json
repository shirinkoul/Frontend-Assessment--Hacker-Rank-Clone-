{"ast":null,"code":"var _arity = /*#__PURE__*/\nrequire(\"./internal/_arity\");\nvar _pipe = /*#__PURE__*/\nrequire(\"./internal/_pipe\");\nvar reduce = /*#__PURE__*/\nrequire(\"./reduce\");\nvar tail = /*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\nmodule.exports = pipe;","map":{"version":3,"names":["_arity","require","_pipe","reduce","tail","pipe","arguments","length","Error","module","exports"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/ramda/src/pipe.js"],"sourcesContent":["var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _pipe =\n/*#__PURE__*/\nrequire(\"./internal/_pipe\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\n\nmodule.exports = pipe;"],"mappings":"AAAA,IAAIA,MAAM,GACV;AACAC,OAAO,CAAC,mBAAmB,CAAC;AAE5B,IAAIC,KAAK,GACT;AACAD,OAAO,CAAC,kBAAkB,CAAC;AAE3B,IAAIE,MAAM,GACV;AACAF,OAAO,CAAC,UAAU,CAAC;AAEnB,IAAIG,IAAI,GACR;AACAH,OAAO,CAAC,QAAQ,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASI,IAAI,GAAG;EACd,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEA,OAAOR,MAAM,CAACM,SAAS,CAAC,CAAC,CAAC,CAACC,MAAM,EAAEJ,MAAM,CAACD,KAAK,EAAEI,SAAS,CAAC,CAAC,CAAC,EAAEF,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;AAClF;AAEAG,MAAM,CAACC,OAAO,GAAGL,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}