{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nlet debugMessage;\n\n/* istanbul ignore next */\nif (typeof __DEV__ === 'boolean' && __DEV__) {\n  debugMessage = {\n    outdatedComputeImagesMaxWidth: \"You're attempting to use an outdated prop, 'computeImagesMaxWidth'. This prop has been replaced in version 6 with 'computeEmbeddedMaxWidth'.\",\n    outdatedAlterChildren: \"You're attempting to use an outdated prop, 'alterChildren'. This prop has been discontinued in version 6. \" + \"Use 'domVisitors={{ onElement }}' instead, and tamper the children manually from here. Use 'domutils' package for easy DOM manipulation.\",\n    outdatedAlterData: \"You're attempting to use an outdated prop, 'alterData'. This prop has been discontinued in version 6. \" + \"Use 'domVisitors={{ onText }}' instead, and tamper the node data field manually from here.\",\n    outdatedAlterNode: \"You're attempting to use an outdated prop, 'alterNode'. This prop has been discontinued in version 6. \" + \"Use 'domVisitors={{ onElement }}' instead, and tamper the node manually from here. Use 'domutils' package for easy DOM manipulation.\",\n    outdatedIgnoreNodesFunction: \"You're attempting to use an outdated prop, 'ignoreNodesFunction'. This prop has been replaced in version 6 with 'ignoreDomNode'.\",\n    outdatedUriProp: \"You're attempting to use an outdated prop, 'uri'. This prop has been discontinued in version 6. \" + \"Use 'source={{ uri }}' instead.\",\n    outdatedHtmlProp: \"You're attempting to use an outdated prop, 'html'. This prop has been discontinued in version 6. \" + \"Use 'source={{ html }}' instead.\",\n    outdatedListPrefixRenderersProps: \"You're attempting to use an outdated prop, 'listPrefixRenderers'. This prop has been discontinued in version 6. \" + \"Use 'customListStyleSpecs' instead.\",\n    outdatedImagesDimensions: \"You're attempting to use an outdated prop, 'imagesInitialDimensions'. This prop has been discontinued in version 6. \" + \"Use 'renderersProps={{ img: { initialDimensions } }}' instead.\",\n    outdatedOnLinkPressProp: \"You're attempting to use an outdated prop, 'onLinkPress'. This prop has been discontinued in version 6. \" + \"Use 'renderersProps={{ a: { onPress } }}' instead.\",\n    outdatedEnableExperimentalPercentWidth: \"You're attempting to use an outdated prop, 'enableExperimentalPercentWidth'. This prop has been discontinued in version 6. \" + \"Use 'renderersProps={{ img: { enableExperimentalPercentWidth } }}' instead.\",\n    outdatedTriggerTREInvalidation: \"You're attempting to use an outdated prop, 'triggerTREInvalidationPropsNames'. This prop has been discontinued in v6.0.0-beta.3. \" + 'From now-on, every prop sent to the TRenderEngineProvider is hot by default.',\n    noSource: 'No source prop was provided. Nothing will be rendered',\n    contentWidth: 'You should always pass contentWidth prop to properly handle screen rotations ' + 'and have a seamless support for images scaling. ' + 'In the meantime, HTML will fallback to Dimensions.window().width, but its ' + 'layout will become inconsistent after screen rotations. ' + 'You are encouraged to use useWindowDimensions hook, see: ' + 'https://reactnative.dev/docs/usewindowdimensions'\n  };\n} else {\n  debugMessage = null;\n}\nvar _default = debugMessage;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;AAgBA,IAAIA,YAAJ;;AAGA;AACA,IAAI,OAAOC,OAAP,KAAmB,SAAnB,IAAgCA,OAApC,EAA6C;EAC3CD,YAAY,GAAG;IACbE,6BAA6B,EAC3B,8IAFW;IAGbC,qBAAqB,EACnB,+GACA,0IALW;IAMbC,iBAAiB,EACf,2GACA,4FARW;IASbC,iBAAiB,EACf,2GACA,sIAXW;IAYbC,2BAA2B,EACzB,kIAbW;IAcbC,eAAe,EACb,qGACA,iCAhBW;IAiBbC,gBAAgB,EACd,sGACA,kCAnBW;IAoBbC,gCAAgC,EAC9B,qHACA,qCAtBW;IAuBbC,wBAAwB,EACtB,yHACA,gEAzBW;IA0BbC,uBAAuB,EACrB,6GACA,oDA5BW;IA6BbC,sCAAsC,EACpC,gIACA,6EA/BW;IAgCbC,8BAA8B,EAC5B,sIACA,8EAlCW;IAmCbC,QAAQ,EAAE,uDAnCG;IAoCbC,YAAY,EACV,kFACA,kDADA,GAEA,4EAFA,GAGA,0DAHA,GAIA,2DAJA,GAKA;EA1CW,CAAf;AA4CD,CA7CD,MA6CO;EACLf,YAAY,GAAG,IAAf;AACD;eAEcA,Y","names":["debugMessage","__DEV__","outdatedComputeImagesMaxWidth","outdatedAlterChildren","outdatedAlterData","outdatedAlterNode","outdatedIgnoreNodesFunction","outdatedUriProp","outdatedHtmlProp","outdatedListPrefixRenderersProps","outdatedImagesDimensions","outdatedOnLinkPressProp","outdatedEnableExperimentalPercentWidth","outdatedTriggerTREInvalidation","noSource","contentWidth"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/debugMessages.ts"],"sourcesContent":["export type DebugType =\n  | 'noSource'\n  | 'contentWidth'\n  | 'outdatedUriProp'\n  | 'outdatedHtmlProp'\n  | 'outdatedListPrefixRenderersProps'\n  | 'outdatedImagesDimensions'\n  | 'outdatedOnLinkPressProp'\n  | 'outdatedEnableExperimentalPercentWidth'\n  | 'outdatedIgnoreNodesFunction'\n  | 'outdatedAlterNode'\n  | 'outdatedAlterChildren'\n  | 'outdatedAlterData'\n  | 'outdatedComputeImagesMaxWidth'\n  | 'outdatedTriggerTREInvalidation';\n\nlet debugMessage: Record<DebugType, string>;\n\nexport type DebugMessages = typeof debugMessage;\n/* istanbul ignore next */\nif (typeof __DEV__ === 'boolean' && __DEV__) {\n  debugMessage = {\n    outdatedComputeImagesMaxWidth:\n      \"You're attempting to use an outdated prop, 'computeImagesMaxWidth'. This prop has been replaced in version 6 with 'computeEmbeddedMaxWidth'.\",\n    outdatedAlterChildren:\n      \"You're attempting to use an outdated prop, 'alterChildren'. This prop has been discontinued in version 6. \" +\n      \"Use 'domVisitors={{ onElement }}' instead, and tamper the children manually from here. Use 'domutils' package for easy DOM manipulation.\",\n    outdatedAlterData:\n      \"You're attempting to use an outdated prop, 'alterData'. This prop has been discontinued in version 6. \" +\n      \"Use 'domVisitors={{ onText }}' instead, and tamper the node data field manually from here.\",\n    outdatedAlterNode:\n      \"You're attempting to use an outdated prop, 'alterNode'. This prop has been discontinued in version 6. \" +\n      \"Use 'domVisitors={{ onElement }}' instead, and tamper the node manually from here. Use 'domutils' package for easy DOM manipulation.\",\n    outdatedIgnoreNodesFunction:\n      \"You're attempting to use an outdated prop, 'ignoreNodesFunction'. This prop has been replaced in version 6 with 'ignoreDomNode'.\",\n    outdatedUriProp:\n      \"You're attempting to use an outdated prop, 'uri'. This prop has been discontinued in version 6. \" +\n      \"Use 'source={{ uri }}' instead.\",\n    outdatedHtmlProp:\n      \"You're attempting to use an outdated prop, 'html'. This prop has been discontinued in version 6. \" +\n      \"Use 'source={{ html }}' instead.\",\n    outdatedListPrefixRenderersProps:\n      \"You're attempting to use an outdated prop, 'listPrefixRenderers'. This prop has been discontinued in version 6. \" +\n      \"Use 'customListStyleSpecs' instead.\",\n    outdatedImagesDimensions:\n      \"You're attempting to use an outdated prop, 'imagesInitialDimensions'. This prop has been discontinued in version 6. \" +\n      \"Use 'renderersProps={{ img: { initialDimensions } }}' instead.\",\n    outdatedOnLinkPressProp:\n      \"You're attempting to use an outdated prop, 'onLinkPress'. This prop has been discontinued in version 6. \" +\n      \"Use 'renderersProps={{ a: { onPress } }}' instead.\",\n    outdatedEnableExperimentalPercentWidth:\n      \"You're attempting to use an outdated prop, 'enableExperimentalPercentWidth'. This prop has been discontinued in version 6. \" +\n      \"Use 'renderersProps={{ img: { enableExperimentalPercentWidth } }}' instead.\",\n    outdatedTriggerTREInvalidation:\n      \"You're attempting to use an outdated prop, 'triggerTREInvalidationPropsNames'. This prop has been discontinued in v6.0.0-beta.3. \" +\n      'From now-on, every prop sent to the TRenderEngineProvider is hot by default.',\n    noSource: 'No source prop was provided. Nothing will be rendered',\n    contentWidth:\n      'You should always pass contentWidth prop to properly handle screen rotations ' +\n      'and have a seamless support for images scaling. ' +\n      'In the meantime, HTML will fallback to Dimensions.window().width, but its ' +\n      'layout will become inconsistent after screen rotations. ' +\n      'You are encouraged to use useWindowDimensions hook, see: ' +\n      'https://reactnative.dev/docs/usewindowdimensions'\n  };\n} else {\n  debugMessage = null as any;\n}\n\nexport default debugMessage;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}