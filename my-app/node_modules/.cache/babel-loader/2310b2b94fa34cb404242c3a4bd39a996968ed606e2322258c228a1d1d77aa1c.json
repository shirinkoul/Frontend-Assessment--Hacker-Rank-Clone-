{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _DocumentMetadataProvider = _interopRequireDefault(require(\"./context/DocumentMetadataProvider\"));\nvar _TNodeRenderer = _interopRequireDefault(require(\"./TNodeRenderer\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst TDocumentRenderer = /*#__PURE__*/(0, _react.memo)(_ref => {\n  let {\n    tdoc,\n    baseUrl,\n    onDocumentMetadataLoaded\n  } = _ref;\n  const metadata = (0, _react.useMemo)(() => {\n    const {\n      baseHref,\n      baseTarget,\n      lang,\n      links,\n      meta,\n      title,\n      dir\n    } = tdoc.context;\n    return {\n      baseTarget,\n      baseUrl: baseUrl !== null && baseUrl !== void 0 ? baseUrl : baseHref,\n      lang,\n      dir,\n      links,\n      meta,\n      title\n    };\n  }, [tdoc.context, baseUrl]);\n  (0, _react.useEffect)(() => {\n    onDocumentMetadataLoaded === null || onDocumentMetadataLoaded === void 0 ? void 0 : onDocumentMetadataLoaded.call(null, metadata);\n  }, [onDocumentMetadataLoaded, metadata]);\n  return /*#__PURE__*/_react.default.createElement(_DocumentMetadataProvider.default, {\n    value: metadata\n  }, /*#__PURE__*/_react.default.createElement(_TNodeRenderer.default, {\n    renderIndex: 0,\n    renderLength: 1,\n    tnode: tdoc\n  }));\n});\nvar _default = TDocumentRenderer;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;AAAA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMA,iBAAiB,gBAAG,iBACxB,QAQM;EAAA,IARL;IACCC,IADD;IAECC,OAFD;IAGCC;EAHD,CAAD;EASE,MAAMC,QAA0B,GAAG,oBAAQ,MAAM;IAC/C,MAAM;MAAEC,QAAF;MAAYC,UAAZ;MAAwBC,IAAxB;MAA8BC,KAA9B;MAAqCC,IAArC;MAA2CC,KAA3C;MAAkDC;IAAlD,IACJV,IAAI,CAACW,OADP;IAEA,OAAO;MACLN,UADK;MAELJ,OAAO,EAAEA,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAaG,QAFf;MAGLE,IAHK;MAILI,GAJK;MAKLH,KALK;MAMLC,IANK;MAOLC;IAPK,CAAP;EASD,CAZkC,EAYhC,CAACT,IAAI,CAACW,OAAN,EAAeV,OAAf,CAZgC,CAAnC;EAaA,sBAAU,MAAM;IACdC,wBAAwB,SAAxB,4BAAwB,WAAxB,oCAAwB,CAAEU,IAA1B,CAA+B,IAA/B,EAAqCT,QAArC;EACD,CAFD,EAEG,CAACD,wBAAD,EAA2BC,QAA3B,CAFH;EAGA,oBACEU,6BAACC,iCAAD;IAA0BC,KAAK,EAAEZ;EAAjC,gBACEU,6BAACG,sBAAD;IAAeC,WAAW,EAAE,CAA5B;IAA+BC,YAAY,EAAE,CAA7C;IAAgDC,KAAK,EAAEnB;EAAvD,EADF,CADF;AAKD,CA/BuB,CAA1B;eAiCeD,iB","names":["TDocumentRenderer","tdoc","baseUrl","onDocumentMetadataLoaded","metadata","baseHref","baseTarget","lang","links","meta","title","dir","context","call","_react","_DocumentMetadataProvider","value","_TNodeRenderer","renderIndex","renderLength","tnode"],"sources":["/home/shirin/Desktop/Frontend Assessment- Hacker Rank Clone /node_modules/react-native-render-html/lib/commonjs/TDocumentRenderer.tsx"],"sourcesContent":["import React, { memo, useEffect, useMemo } from 'react';\nimport { TDocument } from '@native-html/transient-render-engine';\nimport { DocumentMetadata, RenderHTMLSourceProps } from './shared-types';\nimport DocumentMetadataProvider from './context/DocumentMetadataProvider';\nimport TNodeRenderer from './TNodeRenderer';\n\nconst TDocumentRenderer = memo(\n  ({\n    tdoc,\n    baseUrl,\n    onDocumentMetadataLoaded\n  }: {\n    baseUrl?: string;\n    onDocumentMetadataLoaded?: RenderHTMLSourceProps['onDocumentMetadataLoaded'];\n    tdoc: TDocument;\n  }) => {\n    const metadata: DocumentMetadata = useMemo(() => {\n      const { baseHref, baseTarget, lang, links, meta, title, dir } =\n        tdoc.context;\n      return {\n        baseTarget,\n        baseUrl: baseUrl ?? baseHref,\n        lang,\n        dir,\n        links,\n        meta,\n        title\n      };\n    }, [tdoc.context, baseUrl]);\n    useEffect(() => {\n      onDocumentMetadataLoaded?.call(null, metadata);\n    }, [onDocumentMetadataLoaded, metadata]);\n    return (\n      <DocumentMetadataProvider value={metadata}>\n        <TNodeRenderer renderIndex={0} renderLength={1} tnode={tdoc} />\n      </DocumentMetadataProvider>\n    );\n  }\n);\nexport default TDocumentRenderer;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}